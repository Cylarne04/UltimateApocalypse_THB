----------------------------------------
-- File: 'darkeldarslavecagetactic.ai'
-- Edited by Krronus @ 9/24/10
-- Edited by Cylarne_04 2012

class 'DarkEldarSlaveCageTactic' (BaseTactic)

DarkEldarSlaveCage = {}

function DarkEldarSlaveCageTactic:__init( base_ai ) super( base_ai )

	self:SetName("Dark Eldar Slave Cage Tactic")
	
	-- Init abilities
	self.m_bCanDeepStrikeTroops = true
end

function DarkEldarSlaveCageTactic:InitAbilities()

	if (DarkEldarSlaveCage.agony_id == nil) then
		DarkEldarSlaveCage.agony_id = cpu_manager.stats:GetAbilityID( "dark_eldar_citadel_eternal_damnation" )
	end
	
	if (DarkEldarSlaveCage.storm_id == nil) then
		DarkEldarSlaveCage.storm_id = cpu_manager.stats:GetAbilityID( "dark_eldar_citadel_corrosive_storm" )
	end
	
	if (DarkEldarSlaveCage.if_id == nil) then
		DarkEldarSlaveCage.if_id = cpu_manager.stats:GetAbilityID( "dark_eldar_citadel_invulnerability_field" )
	end
	
	if (DarkEldarSlaveCage.bombard_id == nil) then
		DarkEldarSlaveCage.bombard_id = cpu_manager.stats:GetAbilityID( "dark_eldar_citadel_bombard" )
	end

	if (DarkEldarSlaveCage.superweapon_id == nil) then
		DarkEldarSlaveCage.superweapon_id = cpu_manager.stats:GetAbilityID( "dark_eldar_soul_destructor" )
	end
	if (DarkEldarSlaveCage.shield_id == nil) then
		DarkEldarSlaveCage.shield_id = cpu_manager.stats:GetAbilityID( "dark_eldar_base_shield" )
	end
end

function DarkEldarSlaveCageTactic:DoAbilities()

	-- Try to activate the "Eternal Agony" ability
	if (self.base_ai:CanDoAbility(DarkEldarSlaveCage.agony_id)) then
	
		-- Only activate if enemy unit is attacking
		local iRange = self.base_ai:GetAbilityRange(DarkEldarSlaveCage.agony_id)
		local oSquad = Ability.Filters.CloseInfantryEnemy(self.base_ai:GetPosition(), iRange, 1)
		if (oSquad ~= nil and oSquad:IsAttacking()) then
			self.base_ai:DoSpecialAbilitySquad(DarkEldarSlaveCage.agony_id, oSquad:GetSquad())
		end
	end

	-- Try to activate the "Corrosive Storm" ability
	if (self.base_ai:CanDoAbility(DarkEldarSlaveCage.storm_id)) then
	
		-- Only activate if enemy unit is attacking
		local iRange = self.base_ai:GetAbilityRange(DarkEldarSlaveCage.storm_id)
		local oSquad = Ability.Filters.CloseEnemy(self.base_ai:GetPosition(), iRange, 25)
		if (oSquad ~= nil and oSquad:IsAttacking()) then
			self.base_ai:DoSpecialAbilitySquad(DarkEldarSlaveCage.storm_id, oSquad:GetSquad())
		end
	end
	
	-- Try to activate the "Invuln. Field" ability
	if (self.base_ai:CanDoAbility(DarkEldarSlaveCage.if_id) and self.base_ai:IsInCombat() and self.base_ai:GetHealthPercentage() < 0.82) then
		self.base_ai:DoSpecialAbility(DarkEldarSlaveCage.if_id)
	end
	
	-- Bombard
	if (self.base_ai:CanDoAbility(DarkEldarSlaveCage.bombard_id)) then
		Ability.DoAbilityTargetEntity(self.base_ai, DarkEldarSlaveCage.bombard_id, Ability.EntityFilters.CloseBaseEntityEnemy, 1)
	end
	
	-- Superweapon
	if (self.base_ai:CanDoAbility(DarkEldarSlaveCage.superweapon_id)) then
	
		-- Only activate if enemy unit is attacking
		local iRange = self.base_ai:GetAbilityRange(DarkEldarSlaveCage.superweapon_id)
		local oSquad = Ability.Filters.CloseEnemy(self.base_ai:GetPosition(), iRange, 40)
		if (oSquad ~= nil) then
			self.base_ai:DoSpecialAbilitySquad(DarkEldarSlaveCage.superweapon_id, oSquad:GetSquad())
		end
		
		Ability.DoAbilityTargetEntity(self.base_ai, DarkEldarSlaveCage.superweapon_id, Ability.EntityFilters.CloseBaseEntityEnemy, 6)
	end
	
	--[[if (self.base_ai:CanDoAbility(DarkEldarSlaveCage.shield_id)) then
	
		if (self.base_ai:IsInCombat() and self.base_ai:GetHealthPercentage() > 0.3 and not self.base_ai:IsUsingAbility(DarkEldarSlaveCage.shield_id)) then

			-- Activate the Base Shields
			self.base_ai:DoSpecialAbility(DarkEldarSlaveCage.shield_id)
		end	
		if (not self.base_ai:IsInCombat() and self.base_ai:IsUsingAbility(DarkEldarSlaveCage.shield_id)) then

			-- Deactivate the Base Shields
			self.base_ai:DoSpecialAbility(DarkEldarSlaveCage.shield_id)
		end
	end]]

end
