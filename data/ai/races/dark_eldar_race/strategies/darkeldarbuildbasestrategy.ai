----------------------------------------
-- File: 'darkeldarbuildbasestrategy.ai'
-- Edited by Thudmeizer @ 20.03.2008

class 'DarkEldarBuildBaseStrategy' (BuildBaseStrategy)

function DarkEldarBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("dark_eldar_squad_wych")
	self:AddDetectorUnit("dark_eldar_squad_haemonculus")
	
	-- Phases of attacks. If army is decreased substantially, or build only titans: modify.
	self.m_iArmyBuild = math.random(0, 4) -- 4 phases total. If 4 armies was defeated, stop creating armies as it is pointless. Build titans and focus on build order strategy.
	self.m_iArmyHighestStrength = 0 -- Maximum possible army strength I ever had.
end

function DarkEldarBuildBaseStrategy:ChooseBuildProgram()

	-- Check build program count
	if (table.getn(self.info.BuildPrograms) ~= 2) then
		return BuildBaseStrategy.ChooseBuildProgram(self)
	end
	-- Set probabilities of the strategies according to the map size
	local iBuildProgram1	-- Normal
	return 1
end

function DarkEldarBuildBaseStrategy:EvaluateSquadCap()
	
	-- Check if any caravels are in production
	local iBuildingID = cpu_manager.stats:GetBuildingID("dark_eldar_slave_caravel")
	if (self:PlanExists("Build Building Plan", iBuildingID)) then
		return
	end

	-- Check squad and support cap
	if (self:CheckSquadCap(300, 0) or self:CheckSupportCap(150, 300)) then
		
		-- Build a caravel
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "dark_eldar_slave_caravel"
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of "..tBuildType.name)
		end
		return
	end
end

function DarkEldarBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "dark_eldar_hq"
		
	elseif (sType == "Generator") then
		return "dark_eldar_plasma_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "dark_eldar_thermo_plasma"
		
	elseif (sType == "VehicleBuilding") then
		return "dark_eldar_skimmer_shop" 
		
	elseif (sType == "ListeningPost") then
		return "dark_eldar_listening_post"
		
	elseif (sType == "Turret") then
		return "dark_eldar_turret"
		
	elseif (sType == "Mine") then
		return "dark_eldar_mine_field"
	end
	
	return nil
end

function DarkEldarBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "addon_dark_eldar_gruesome_display") then
		return "dark_eldar_slave_caravel"

	elseif (sType == "addon_dark_eldar_slave_graveyard") then
		return "dark_eldar_slave_caravel"
		
	elseif (sType == "addon_dark_eldar_list_post_1") then
		return "dark_eldar_listening_post"
		
	elseif (sType == "addon_dark_eldar_list_post_2") then
		return "dark_eldar_listening_post"

	elseif (sType == "addon_dark_eldar_list_post_dark_lance") then
		return "dark_eldar_listening_post"
		
	elseif (sType == "addon_dark_eldar_turret") then
		return "dark_eldar_turret"
		
	elseif (sType == "addon_dark_eldar_hq_1") then
		return "dark_eldar_hq"
		
	elseif (sType == "addon_dark_eldar_hq_2") then
		return "dark_eldar_hq"
	end
	return nil
end

-- Inherited method to check if an addon is a tier addon
function DarkEldarBuildBaseStrategy:IsTierAddon( sName, iTargetTier )

	-- Check addon name and target tier
	if (sName == "addon_dark_eldar_hq_1" and iTargetTier == 2) then
		return true
	elseif (sName == "addon_dark_eldar_hq_2" and iTargetTier == 3) then
		return true
	end
	return false
end

-- Returns the squad cap and support cap of the given squad
function DarkEldarBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "dark_eldar_squad_mandrake") then
		return 2, 0
	elseif (sSquadName == "dark_eldar_squad_warrior") then
		return 2, 0
	elseif (sSquadName == "dark_eldar_squad_hellion") then
		return 2, 0
	elseif (sSquadName == "dark_eldar_squad_scourge") then
		return 3, 0
	elseif (sSquadName == "dark_eldar_squad_wych") then
		return 3, 0
	elseif (sSquadName == "dark_eldar_squad_warp_beast") then
		return 3, 0
	elseif (sSquadName == "dark_eldar_squad_archon") then
		return 2, 0
	elseif (sSquadName == "dark_eldar_squad_reaver") then
		return 0, 1
	elseif (sSquadName == "dark_eldar_squad_raven") then
		return 0, 2
	elseif (sSquadName == "dark_eldar_squad_raider") then
		return 0, 3
	elseif (sSquadName == "dark_eldar_squad_talos") then
		return 0, 4
	elseif (sSquadName == "dark_eldar_squad_ravager") then
		return 0, 4
	elseif (sSquadName == "dark_eldar_squad_dais_of_destruction") then
		return 0, 6
	end
	return 0, 0
end

function DarkEldarBuildBaseStrategy:UpdateTierLevel()
	
	-- Reset tier level
	self.tierLevel = 1

	-- Prepare
	local iHQAddon1ID = cpu_manager.stats:GetAddOnID("addon_dark_eldar_hq_1")
	local iHQAddon2ID = cpu_manager.stats:GetAddOnID("addon_dark_eldar_hq_2")
	local oStats = cpu_manager.stats:GetPlayerStatsFromID( cpu_manager.player_id )
	
	-- Check HQ's for addons
	for oBase in oStats:GetBases() do

		-- Check for valid building
		if (oBase:IsValid() and not oBase:IsListeningPost()) then

			-- Check tier 5 
			if cpu_manager.cpu_player:IsResearchComplete("dark_eldar_apocalypse_research") then
				self.tierLevel = 6
			elseif cpu_manager.cpu_player:IsResearchComplete("dark_eldar_tier4_research") then
				self.tierLevel = 5
			elseif cpu_manager.cpu_player:IsResearchComplete("dark_eldar_tier3_research") then
				self.tierLevel = 4
			-- Check for HQ addon 2 
			elseif (oBase:HasAddOn(iHQAddon2ID)) then
				self.tierLevel = 3
			-- Check for HQ addon 1 
			elseif (oBase:HasAddOn(iHQAddon1ID)) then
				self.tierLevel = 2
			end
		end
	end
end

function DarkEldarBuildBaseStrategy:BuildFlexible()
  
	-- Locales
	local iArmyStrength = cpu_manager:GetArmyStrength()
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )
	
	-- Determine my all time largest army. During major casualties, determine if I should create more squads or only focus on build orders and titans.
	if (iArmyStrength > self.m_iArmyHighestStrength) then
		self.m_iArmyHighestStrength = iArmyStrength
	end
	
	if (self.m_iArmyBuild < 4) then
		-- HUGE hit! I have a very large army, and then in battle I lost so many...
		if (iArmyStrength <= self.m_iArmyHighestStrength - 300 and iArmyStrength <= 2300) then
			self.m_iArmyBuild = self.m_iArmyBuild + 1
			self.m_iArmyHighestStrength = 0
		end
	elseif (iArmyStrength > 3500) then
		self.m_iArmyBuild = 0
	end
	
	if (iArmyStrength >= 1000 or (iPower >= 800 and iRequisition >= 900)) then
		
		-- Dynamic research item syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount
		local iCommanderSquads	= self:CountSquads("dark_eldar_squad_archon") + self:CountSquads("dark_eldar_squad_haemonculus")
		local iInfantrySquads	= self:CountSquads("dark_eldar_squad_mandrake") + self:CountSquads("dark_eldar_squad_warrior") + self:CountSquads("dark_eldar_squad_scourge") +
								  self:CountSquads("dark_eldar_squad_wych") + self:CountSquads("dark_eldar_squad_hellion")
		local iVehicleSquads	= self:CountSquads("dark_eldar_squad_reaver") + self:CountSquads("dark_eldar_squad_raider") + self:CountSquads("dark_eldar_squad_reaper") +
								  self:CountSquads("dark_eldar_squad_talos") + self:CountSquads("dark_eldar_squad_ravager") + self:CountSquads("dark_eldar_squad_rampage") + self:CountSquads("dark_eldar_squad_shadow")
		
		-- Compute tier 1 researches
		if (self.tierLevel >= 1) then
		
			-- Compute infantry researches
			if (iInfantrySquads >= 2) then
				self:DynamicResearch("dark_eldar_infiltration_mandrake_research", 1, 50, 25, 0, 0, "dark_eldar_squad_mandrake", 2)
			end
			
			-- Compute commander researches
			if (iCommanderSquads >= 1) then
				self:DynamicResearch("dark_eldar_poisoned_blades_research", 1, 50, 50, 0, 0, nil, 0)
			end
			
			-- Compute secondary researches
			if (iArmyStrength >= 750) then

				-- Compute Soulshock defenses
				self:DynamicResearch("dark_eldar_upgrade_soulshock", 1, 100, 50, 0, 0, nil, 0)
				
				-- Compute infantry researches
				if (iInfantrySquads >= 2) then
					self:DynamicResearch("dark_eldar_upgrade_soulseeker_ammunition", 2, 100, 40, 0, 0, "dark_eldar_squad_warrior", 2)
					--self:DynamicResearch("dark_eldar_upgrade_retinue_size_1", 1, 40, 15, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_fleet_of_foot_research", 1, 50, 50, 0, 0, nil, 0)
				end
			end
			
			-- Compute bonus researches
			if (iArmyStrength >= 1250) then
				
				-- Compute infantry researches
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("dark_eldar_upgrade_destructor", 1, 75, 75, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_upgrade_power_scythe", 1, 75, 75, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_range_increase_research", 1, 150, 50, 0, 0, "dark_eldar_squad_warrior", 2)
					self:DynamicResearch("dark_eldar_terrorfex_grenade_research", 1, 25, 75, 0, 0, nil, 0)
				end
			end
		end
		
		-- Compute tier 2 researches
		if (self.tierLevel >= 2) then
		
			-- Compute resource researches
			self:DynamicResearch("dark_eldar_upgrade_power_1", 2, 200, 40, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_upgrade_requisition_1", 2, 75, 250, 0, 0, nil, 0)
			
			-- Compute Soulshock defenses
			self:DynamicResearch("dark_eldar_upgrade_soulshock_2", 2, 150, 100, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_turret_upgrade1", 2, 50, 50, 0, 0, nil, 0)
			
			-- Compute Poisoned Blades
			self:DynamicResearch("dark_eldar_poisoned_blades_research_2", 2, 100, 100, 0, 0, nil, 0)
			
			-- Compute Soul Leaching
			self:DynamicResearch("dark_eldar_soul_leach_research", 2, 75, 50, 0, 0, nil, 0)

			-- Compute vehicle researches
			if (iVehicleSquads >= 3) then
				self:DynamicResearch("dark_eldar_upgrade_vehicle_armor", 2, 125, 75, 0, 0, nil, 0)
				self:DynamicResearch("dark_eldar_reaver_targeting_research", 2, 75, 25, 0, 0, "dark_eldar_squad_reaver", 3)
			end
			
			-- Compute commander researches
			if (iCommanderSquads >= 1) then
				--self:DynamicResearch("dark_eldar_upgrade_retinue_size_2", 2, 50, 25, 0, 0, "dark_eldar_squad_archon", 1)
			end
		
			-- Compute secondary researches
			if (iArmyStrength >= 1250) then
			
				self:DynamicResearch("dark_eldar_portal_healing_research", 2, 100, 100, 0, 0, nil, 0)
				self:DynamicResearch("dark_eldar_portal_shroud_research", 2, 150, 100, 0, 0, nil, 0)
		
				-- Compute infantry researches
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("dark_eldar_upgrade_infantry_health", 2, 100, 50, 0, 0, "dark_eldar_squad_warrior", 2)
					self:DynamicResearch("dark_eldar_upgrade_mandrake_melee", 2, 75, 25, 0, 0, "dark_eldar_squad_mandrake", 2)
					self:DynamicResearch("dark_eldar_horrorfex_grenade_research", 2, 25, 75, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_range_increase_research_2", 2, 100, 100, 0, 0, "dark_eldar_squad_warrior", 2)
					self:DynamicResearch("dark_eldar_upgrade_commander_health", 2, 60, 60, 0, 0, nil, 0)
				end			
			end
			
			-- Compute bonus researches
			if (iArmyStrength >= 1750) then
			
				-- Compute commander researches
				if (iCommanderSquads >= 1) then
					self:DynamicResearch("dark_eldar_crucible_of_malediction_research", 2, 50, 100, 0, 0, "dark_eldar_squad_archon", 1)
					self:DynamicResearch("dark_eldar_stinger_research", 2, 25, 50, 0, 0, "dark_eldar_squad_haemonculus", 1)
					self:DynamicResearch("dark_eldar_soul_destruction_research", 2, 25, 50, 0, 0, "dark_eldar_squad_haemonculus", 1)
				end
		
				-- Compute infantry researches
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("dark_eldar_upgrade_agonizer", 2, 100, 100, 0, 0, nil, 0)
				end
			end
		end
		
		-- Compute tier 3 researches
		if (self.tierLevel >= 3) then
		
			-- Compute resource researches
			self:DynamicResearch("dark_eldar_upgrade_power_2", 3, 350, 0, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_upgrade_requisition_2", 3, 100, 350, 0, 0, nil, 0)

			-- Compute vehicle researches
			if (iVehicleSquads >= 3) then
				self:DynamicResearch("dark_eldar_upgrade_vehicle_armor_2", 3, 150, 100, 0, 0, nil, 0)
			end
			
			-- Compute secondary researches
			if (iArmyStrength >= 1750) then
				
				-- Compute commander researches
				if (iCommanderSquads >= 1) then
					--self:DynamicResearch("dark_eldar_upgrade_retinue_size_3", 3, 75, 35, 0, 0, "dark_eldar_squad_archon", 1)
				end
				
				-- Compute infantry researches
				if (iInfantrySquads >= 3) then
					self:DynamicResearch("dark_eldar_haywire_grenade_research", 2, 100, 100, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_gravity_grenade_research", 3, 100, 100, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_upgrade_infantry_health_2", 3, 150, 100, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_upgrade_soulseeker_ammunition_2", 3, 130, 65, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_upgrade_commander_health_2", 3, 80, 80, 0, 0, nil, 0)
					self:DynamicResearch("dark_eldar_upgrade_warp_beast_morale", 3, 60, 15, 0, 0, "dark_eldar_squad_warp_beast", 2)
				end	
			end
			
			-- Compute bonus researches
			if (iArmyStrength >= 2250) then
		
				-- Compute vehicle researches
				if (iVehicleSquads >= 3) then
					self:DynamicResearch("dark_eldar_upgrade_mandrake_melee_2", 3, 75, 25, 0, 0, "dark_eldar_squad_mandrake", 2)
					self:DynamicResearch("dark_eldar_wildfire_research", 3, 50, 75, 0, 0, "dark_eldar_squad_talos", 1)
				end
			end
		end
		
		-- Compute tier 4 researches
		if (self.tierLevel >= 4) then
		
			self:DynamicResearch("dark_eldar_upgrade_warp_beast_morale_2", 4, 160, 65, 0, 0, "dark_eldar_squad_warp_beast", 2)
			self:DynamicResearch("dark_eldar_upgrade_vehicle_armor_3", 4, 175, 125, 0, 0, nil, 0)
			
			-- Compute resource researches
			self:DynamicResearch("dark_eldar_upgrade_power_3", 4, 500, 60, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_upgrade_requisition_3", 4, 125, 450, 0, 0, nil, 0)
			
			self:DynamicResearch("dark_eldar_dais_research", 4, 175, 125, 0, 0, nil, 0)

			-- Compute turret upgrades research
			self:DynamicResearch("dark_eldar_turret_upgrade2", 3, 150, 100, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_listening_post_upgrade", 3, 600, 240, 0, 0, nil, 0)
			
			self:DynamicResearch("dark_eldar_upgrade_power_4", 5, 650, 80, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_upgrade_requisition_4", 5, 150, 550, 0, 0, nil, 0)
			
			-- Compute donations and end gamers.
			self:DynamicResearch("dark_eldar_donate1_research", 5, 0, 0, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_donate2_research", 5, 0, 0, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_donate3_research", 5, 0, 0, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_donate4_research", 5, 0, 0, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_donate5_research", 6, 0, 0, 0, 0, nil, 0)
			
			-- Compute Apocalypse
			self:DynamicResearch("dark_eldar_apocalypse_research", 5, 1500, 1500, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_upgrade_requisition_5", 6, 300, 1000, 0, 0, nil, 0)
			self:DynamicResearch("dark_eldar_upgrade_power_5", 6, 800, 100, 0, 0, nil, 0)
			
			self:DynamicResearch("dark_eldar_cities_of_commorah_research", 6, 0, 0, 0, 0, nil, 0)
		end
	end
	
	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then
	
		-- Dynamic buildings
		-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		
		self:DynamicBuild("dark_eldar_turret", 5, 1, 150, 100, 0, 0)
		self:DynamicBuild("dark_eldar_plasma_generator", 6 * self:GetBuildingCountByName("dark_eldar_hq"), 3, 500, 0, 0, 0)
		self:DynamicBuild("dark_eldar_hq", 2, 1, 700, 150, 0, 0)
		
		if (cpu_manager.cpu_player:IsResearchComplete("dark_eldar_cities_of_commorah_research")) then -- At this stage, every structure is for free.
			
			-- Choose what to build.
			self.m_iWantToBuild = math.random(0, 3)
			
			if (self.m_iWantToBuild == 0) then -- Build defenses
				
				self:DynamicBuild("dark_eldar_wall", 20, 3, 0, 0, 0, 0)
				self:DynamicBuild("dark_eldar_turret", 50, 1, 0, 0, 0, 0)
				self:DynamicBuild("dark_eldar_mine_field", 30, 1, 0, 0, 0, 0)
				
			elseif (self.m_iWantToBuild == 1) then -- Build production structures
				self:DynamicBuild("dark_eldar_hall_of_blood", 4, 1, 0, 0, 0, 0) 
				self:DynamicBuild("dark_eldar_skimmer_shop", 4, 2, 0, 0, 0, 0)
				self:DynamicBuild("dark_eldar_corruptedgate", 5, 5, 1000, 5000, 0, 0)
				
			elseif (self.m_iWantToBuild == 2) then -- Build economic structures
				self:DynamicBuild("dark_eldar_plasma_generator", 6 * self:GetBuildingCountByName("dark_eldar_hq"), 1, 0, 0, 0, 0)
				self:DynamicBuild("dark_eldar_hq", 4, 1, 2100, 1500, 0, 0)
				
			elseif (self.m_iWantToBuild == 3) then -- Build portals
				self:DynamicBuild("dark_eldar_portal", 15, 1, 0, 0, 0, 0)
			end
			
			self:DynamicBuild("dark_eldar_hq_sp_dxp3", 1, 5, 2000, 2000, 0, 0) -- Insert SS here.
			
		elseif ((iPower >= 1200 and iRequisition >= 1800) or self.m_iArmyBuild >= 3) then
			
			if (self.m_iArmyBuild >= 4) then
				self:DynamicBuild("dark_eldar_wall", 20, 1, 700, 0, 0, 0)
				self:DynamicBuild("dark_eldar_mine_field", 20, 1, 60, 15, 0, 0)
				self:DynamicBuild("dark_eldar_turret", 25, 1, 150, 100, 0, 0)
			end
			
			-- tier 0
			self:DynamicBuild("dark_eldar_hall_of_blood", 2, 1, 1500, 0, 0, 0) 
			self:DynamicBuild("dark_eldar_turret", 10, 1, 500, 500, 0, 0)
			self:DynamicBuild("dark_eldar_mine_field", 4, 1, 800, 800, 0, 0)
			
			-- tier1
			self:DynamicBuild("dark_eldar_skimmer_shop", 2, 2, 500, 1000, 0, 0)
			self:DynamicBuild("dark_eldar_portal", 5, 2, 500, 500, 0, 0)
			
			-- tier 2
			self:DynamicBuild("dark_eldar_turret", 25, 3, 500, 500, 0, 0)
			
			-- tier 3
			self:DynamicBuild("dark_eldar_hq", 3, 4, 1000, 500, 0, 0)
			self:DynamicBuild("dark_eldar_soul_cage", 3, 4, 2000, 2000, 0, 0)
			
			-- tier 4
			self:DynamicBuild("dark_eldar_corruptedgate", 3, 5, 5000, 5000, 0, 0)
			self:DynamicBuild("dark_eldar_hq_sp_dxp3", 2, 5, 5000, 5000, 0, 0)
		end
	end
	
	-- Build nukes
	if cpu_manager.cpu_player:IsResearchComplete("dark_eldar_donate5_research") then
		-- Build nuke
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Squad
		
		tBuildType.name = "dark_eldar_squad_soulstorm_cataclysm"
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of "..tBuildType.name)
		end
	end
end

-- Method to check if force tech should be computed
function DarkEldarBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end

	-- Check resources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then
	
		-- Check resources
		if (iRequisition > 600 and iPower > 200) then
			return false
		end
		return not self.m_bHQAddon1
		
	elseif (iTierLevel == 2) then
	
		-- Check for wych cult arena
		if (self:GetBuildingCountByName("dark_eldar_wych_cult_arena", false) < 1) then
			return true
		end

		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	elseif (iTierLevel == 3) then	

		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier3 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	elseif (iTierLevel == 4) then	

		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier4 and (iRequisition < 800 or iPower < 800)) then
			return true
		end
	end
	return false
end

-- Return placement type for buildings
function DarkEldarBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	-- Check building
	if (iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_hq_sp_dxp3")) then
		return "HQ"
		
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_hall_of_blood") or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_skimmer_shop") or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_corruptedgate")) then
		return "Military"
		
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_portal")) then
		return "Front1"	
		
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_turret") or
			iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_wall") or
			iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_mine_field")) then
		return "Front2"

	elseif (cpu_manager:IsGenerator(iBuildingID) or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_haemonculus_laboratory") or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_wych_cult_arena") or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_soul_cage") or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_slave_caravel_ai") or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_slave_caravel") or
		iBuildingID == cpu_manager.stats:GetBuildingID("dark_eldar_hq")) then
		return "BaseBack"
	end
	return "Basic"
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function DarkEldarBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if (sName == "dark_eldar_squad_dais_of_destruction") then
		return true
	end
	return false
end